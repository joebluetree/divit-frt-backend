// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("master_sequence")
                .StartsAt(1000L);

            modelBuilder.Entity("Database.Models.Accounts.acc_acctm", b =>
                {
                    b.Property<int>("acc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<string>("acc_code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("acc_grp_id")
                        .HasColumnType("integer");

                    b.Property<int?>("acc_maincode_id")
                        .HasColumnType("integer");

                    b.Property<string>("acc_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("acc_row_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("acc_short_name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("acc_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char")
                        .HasDefaultValue("N");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("acc_id")
                        .HasName("pk_acc_acctm_acc_id");

                    b.HasIndex("acc_grp_id");

                    b.HasIndex("acc_maincode_id");

                    b.HasIndex("rec_company_id", "acc_row_type", "acc_code")
                        .IsUnique()
                        .HasDatabaseName("uq_acc_acctm_acc_code");

                    b.HasIndex("rec_company_id", "acc_row_type", "acc_name")
                        .IsUnique()
                        .HasDatabaseName("uq_acc_acctm_acc_name");

                    b.HasIndex("rec_company_id", "acc_row_type", "acc_short_name")
                        .IsUnique()
                        .HasDatabaseName("uq_acc_acctm_acc_short_name");

                    b.ToTable("acc_acctm", (string)null);

                    b.HasData(
                        new
                        {
                            acc_id = 1,
                            acc_code = "OI",
                            acc_grp_id = 1,
                            acc_name = "OCEAN IMPORT",
                            acc_row_type = "MAIN-CODE",
                            acc_short_name = "OI",
                            acc_type = "NA",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 4, 42, 9, 728, DateTimeKind.Utc).AddTicks(318),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            acc_id = 2,
                            acc_code = "OE",
                            acc_grp_id = 1,
                            acc_name = "OCEAN EXPORT",
                            acc_row_type = "MAIN-CODE",
                            acc_short_name = "OE",
                            acc_type = "NA",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 683, DateTimeKind.Utc).AddTicks(2693),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            acc_id = 3,
                            acc_code = "AR",
                            acc_grp_id = 1,
                            acc_name = "AR",
                            acc_row_type = "MAIN-CODE",
                            acc_short_name = "AR",
                            acc_type = "AR",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 683, DateTimeKind.Utc).AddTicks(2695),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            acc_id = 4,
                            acc_code = "AP",
                            acc_grp_id = 2,
                            acc_name = "AP",
                            acc_row_type = "MAIN-CODE",
                            acc_short_name = "AP",
                            acc_type = "AP",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 683, DateTimeKind.Utc).AddTicks(2698),
                           rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            acc_id = 5,
                            acc_code = "OE",
                            acc_grp_id = 2,
                            acc_maincode_id = 2,
                            acc_name = "OCEAN EXPORT",
                            acc_row_type = "ACC-CODE",
                            acc_short_name = "OE",
                            acc_type = "NA",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 683, DateTimeKind.Utc).AddTicks(2700),
                            rec_locked = "N",
                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Accounts.acc_groupm", b =>
                {
                    b.Property<int>("grp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<string>("grp_main_group")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("grp_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("grp_order")
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char")
                        .HasDefaultValue("N");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("grp_id")
                        .HasName("pk_acc_groupm_grp_id");

                    b.HasIndex("rec_company_id", "grp_name")
                        .IsUnique()
                        .HasDatabaseName("uq_acc_groupm_grp_name");

                    b.ToTable("acc_groupm", (string)null);

                    b.HasData(
                        new
                        {
                            grp_id = 1,
                            grp_main_group = "ASSET",
                            grp_name = "CURRENT ASSETS",
                            grp_order = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 678, DateTimeKind.Utc).AddTicks(8293),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            grp_id = 2,
                            grp_main_group = "LIABILITIES",
                            grp_name = "CURRENT LIABILITIES",
                            grp_order = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 678, DateTimeKind.Utc).AddTicks(8297),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            grp_id = 3,
                            grp_main_group = "DIRECT INCOME",
                            grp_name = "DIRECT INCOME",
                            grp_order = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 678, DateTimeKind.Utc).AddTicks(8299),
                            rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            grp_id = 4,
                            grp_main_group = "DIRECT EXPENSE",
                            grp_name = "DIRECT EXPENSE",
                            grp_order = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 678, DateTimeKind.Utc).AddTicks(8301),
                           rec_locked = "N",
                            rec_version = 0
                        });
                });


            modelBuilder.Entity("Database.Models.Marketing.mark_qtnd_fcl", b =>
                {
                    b.Property<int?>("qtnd_id")

            modelBuilder.Entity("Database.Models.Marketing.mark_qtnd_air", b =>
                {
                    b.Property<int>("qtnd_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<int?>("mark_qtnmqtnm_id")
                        .HasColumnType("integer");


                    b.Property<string>("qtnd_1000k")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_100k")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_300k")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_45k")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_500k")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("qtnd_carrier_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_carrier_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnd_cntr_type")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("qtnd_cutoff")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("qtnd_etd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<decimal?>("qtnd_haulage")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal?>("qtnd_ifs")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal?>("qtnd_isps")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal?>("qtnd_of")
                        .HasColumnType("decimal(15,3)");

                    b.Property<int?>("qtnd_order")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("qtnd_etd")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("qtnd_fsc")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_hac")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_min")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("qtnd_order")

                        .HasColumnType("integer");

                    b.Property<int?>("qtnd_pod_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_pod_name")


                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");


                    b.Property<int?>("qtnd_pol_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_pol_name")

                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("qtnd_pss")
                        .HasColumnType("decimal(15,3)");

                    b.Property<int?>("qtnd_qtnm_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_routing")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("qtnd_tot_amt")
                        .IsRequired()
                        .HasColumnType("decimal(15,3)");

                    b.Property<string>("qtnd_trans_time")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("qtnd_qtnm_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_routing")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("qtnd_sfc")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("qtnd_trans_time")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("qtnd_war")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");


                    b.Property<int?>("rec_branch_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .HasColumnType("text");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("qtnd_id")

                        .HasName("pk_mark_qtnd_fcl_qtnd_id");


                    b.HasIndex("mark_qtnmqtnm_id");

                    b.HasIndex("qtnd_carrier_id");

                    b.HasIndex("qtnd_pod_id");

                    b.HasIndex("qtnd_pol_id");

                    b.HasIndex("qtnd_qtnm_id");

                    b.HasIndex("rec_branch_id");

                    b.HasIndex("rec_company_id");


                    b.ToTable("mark_qtnd_fcl", (string)null);

                    b.ToTable("mark_qtnd_air", (string)null);


                    b.HasData(
                        new
                        {
                            qtnd_id = 1,

                            qtnd_cntr_type = "40' ft",
                            qtnd_cutoff = "ABC",
                            qtnd_etd = "QF-10",
                            qtnd_qtnm_id = 10,
                            qtnd_tot_amt = 5000m,
                            rec_branch_id = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 4, 42, 9, 741, DateTimeKind.Utc).AddTicks(9007),

                            qtnd_45k = "1.5/kg",
                            qtnd_order = 1,
                            qtnd_pod_id = 1005,
                            qtnd_pod_name = "AABENRAA, DENMARK",
                            qtnd_qtnm_id = 20,
                            rec_branch_id = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 728, DateTimeKind.Utc).AddTicks(1881),

                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Marketing.mark_qtnd_lcl", b =>
                {
                    b.Property<int>("qtnd_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<int?>("mark_qtnmqtnm_id")
                        .HasColumnType("integer");

                    b.Property<int>("qtnd_acc_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_acc_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("qtnd_amt")
                        .HasColumnType("decimal(15,3)");

                    b.Property<int>("qtnd_order")
                        .HasColumnType("integer");

                    b.Property<string>("qtnd_per")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("qtnd_qtnm_id")
                        .HasColumnType("integer");

                    b.Property<int?>("rec_branch_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .HasColumnType("text");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("qtnd_id")
                        .HasName("pk_mark_qtnd_lcl_qtnd_pkid");

                    b.HasIndex("mark_qtnmqtnm_id");

                    b.HasIndex("qtnd_acc_id");

                    b.HasIndex("qtnd_qtnm_id");

                    b.HasIndex("rec_branch_id");

                    b.HasIndex("rec_company_id");

                    b.ToTable("mark_qtnd_lcl", (string)null);

                    b.HasData(
                        new
                        {
                            qtnd_id = 1,
                            qtnd_acc_id = 1,
                            qtnd_acc_name = "OCEAN IMPORT",
                            qtnd_amt = 100m,
                            qtnd_order = 1,
                            qtnd_per = "koc-mum",
                            qtnd_qtnm_id = 1,
                            rec_branch_id = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 4, 42, 9, 738, DateTimeKind.Utc).AddTicks(2812),

                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Marketing.mark_qtnm", b =>
                {
                    b.Property<int>("qtnm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<decimal>("qtnm_amt")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal?>("qtnm_cbm")
                        .HasColumnType("decimal(15,3)");

                    b.Property<int>("qtnm_cfno")
                        .HasColumnType("integer");

                    b.Property<decimal?>("qtnm_cft")
                        .HasColumnType("decimal(15,3)");

                    b.Property<string>("qtnm_commodity")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("qtnm_date")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<decimal?>("qtnm_kgs")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal?>("qtnm_lbs")
                        .HasColumnType("decimal(15,3)");

                    b.Property<string>("qtnm_move_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("qtnm_no")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("qtnm_package")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("qtnm_pld_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_plfd_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("qtnm_pod_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnm_pod_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("qtnm_pol_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnm_pol_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("qtnm_por_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnm_por_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_quot_by")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("qtnm_routing")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("qtnm_salesman_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnm_to_addr1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_to_addr2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_to_addr3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_to_addr4")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("qtnm_to_id")
                        .HasColumnType("integer");

                    b.Property<string>("qtnm_to_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_trans_time")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("qtnm_type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime?>("qtnm_valid_date")
                        .HasColumnType("date");

                    b.Property<int?>("rec_branch_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .HasColumnType("text");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("qtnm_id")
                        .HasName("pk_mark_qtnm_qtnm_pkid");

                    b.HasIndex("qtnm_pod_id");

                    b.HasIndex("qtnm_pol_id");

                    b.HasIndex("qtnm_por_id");

                    b.HasIndex("qtnm_salesman_id");

                    b.HasIndex("qtnm_to_id");

                    b.HasIndex("rec_branch_id");

                    b.HasIndex("rec_company_id");

                    b.ToTable("mark_qtnm", (string)null);

                    b.HasData(
                        new
                        {
                            qtnm_id = 1,
                            qtnm_amt = 5000m,
                            qtnm_cfno = 1,

                            qtnm_date = new DateTime(2025, 1, 13, 10, 12, 9, 736, DateTimeKind.Local).AddTicks(3870),

                            qtnm_move_type = "TRUCKING",
                            qtnm_no = "QL-1",
                            qtnm_quot_by = "ADMIN",
                            qtnm_salesman_id = 1,
                            qtnm_to_addr1 = "KOCHI",
                            qtnm_to_id = 100,
                            qtnm_to_name = "ABC LTD KOCHI",
                            qtnm_type = "LCL",
                            qtnm_valid_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2008),
                            rec_branch_id = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 711, DateTimeKind.Utc).AddTicks(924),
                            rec_version = 0
                        },
                        new
                        {

                            qtnm_id = 10,
                            qtnm_amt = 5000m,
                            qtnm_cfno = 10,
                            qtnm_date = new DateTime(2025, 1, 13, 10, 12, 9, 736, DateTimeKind.Local).AddTicks(3892),
                            qtnm_move_type = "TRUCKING",
                            qtnm_no = "QF-10",
                            qtnm_quot_by = "ADMIN",
                            qtnm_salesman_id = 1,
                            qtnm_to_addr1 = "KOCHI",
                            qtnm_to_id = 100,
                            qtnm_to_name = "ABC LTD KOCHI",
                            qtnm_type = "AIR",
                            qtnm_valid_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2008),
                            rec_branch_id = 1,
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 4, 42, 9, 736, DateTimeKind.Utc).AddTicks(3894),
                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Masters.mast_contactm", b =>
                {
                    b.Property<int>("cont_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<int>("cont_country_id")
                        .HasColumnType("integer");

                    b.Property<string>("cont_designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cont_email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cont_mobile")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cont_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("cont_parent_id")
                        .HasColumnType("integer");

                    b.Property<string>("cont_remarks")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cont_tel")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cont_title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("mast_customermcust_id")
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char")
                        .HasDefaultValue("N");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("cont_id")
                        .HasName("pk_mast_contactm_cont_id");

                    b.HasIndex("cont_country_id");

                    b.HasIndex("cont_parent_id");

                    b.HasIndex("mast_customermcust_id");

                    b.HasIndex("rec_company_id");

                    b.ToTable("mast_contactm", (string)null);

                    b.HasData(
                        new
                        {
                            cont_id = 1,
                            cont_country_id = 1,
                            cont_designation = "EXECUTIVE",
                            cont_email = "joy@cargomar.in",
                            cont_mobile = "9947194307",
                            cont_name = "JOY",
                            cont_parent_id = 100,
                            cont_tel = "0484-245678",
                            cont_title = "MR",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 677, DateTimeKind.Utc).AddTicks(163),
                           rec_locked = "N",
                            rec_version = 0
                        },
                        new
                        {
                            cont_id = 2,
                            cont_country_id = 1,
                            cont_designation = "EXECUTIVE",
                            cont_email = "ajith@cargomar.in",
                            cont_mobile = "9917294107",
                            cont_name = "AJITH",
                            cont_parent_id = 100,
                            cont_tel = "0484-245678",
                            cont_title = "MR",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 677, DateTimeKind.Utc).AddTicks(168),
                            rec_locked = "N",
                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Masters.mast_customerm", b =>
                {
                    b.Property<int>("cust_id")
                        .HasColumnType("integer");

                    b.Property<string>("cust_address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cust_address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cust_address3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cust_code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<decimal>("cust_credit_limit")
                        .HasColumnType("decimal(15,3)");

                    b.Property<string>("cust_display_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("cust_est_dt")
                        .HasColumnType("date");

                    b.Property<string>("cust_is_parent")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("cust_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("cust_parent_id")
                        .HasColumnType("integer");

                    b.Property<string>("cust_row_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("cust_short_name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("cust_type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char")
                        .HasDefaultValue("N");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("cust_id")
                        .HasName("pk_mast_customerm_cust_id");

                    b.HasIndex("cust_parent_id");

                    b.HasIndex("rec_company_id", "cust_row_type", "cust_code")
                        .IsUnique()
                        .HasDatabaseName("uq_cust_customerm_cust_code");

                    b.HasIndex("rec_company_id", "cust_row_type", "cust_name")
                        .IsUnique()
                        .HasDatabaseName("uq_cust_customerm_cust_name");

                    b.HasIndex("rec_company_id", "cust_row_type", "cust_short_name")
                        .IsUnique()
                        .HasDatabaseName("uq_cust_customerm_cust_short_name");

                    b.ToTable("mast_customerm", (string)null);

                    b.HasData(
                        new
                        {
                            cust_id = 100,
                            cust_address1 = "PO BOX 12123",
                            cust_address2 = "LMS BUILDING",
                            cust_address3 = "KOCHI",
                            cust_code = "ABC",
                            cust_credit_limit = 0m,
                            cust_display_name = "ABC LTD",
                            cust_is_parent = "Y",
                            cust_name = "ABC LTD KOCHI",
                            cust_row_type = "CUSTOMER",
                            cust_short_name = "ABC",
                            cust_type = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 672, DateTimeKind.Utc).AddTicks(6662),
                            rec_locked = "N",
                            rec_version = 0
                        });
                });

            modelBuilder.Entity("Database.Models.Masters.mast_param", b =>
                {
                    b.Property<int>("param_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"master_sequence\"')");

                    b.Property<string>("param_code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("param_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("param_order")
                        .HasColumnType("integer");

                    b.Property<string>("param_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("param_value1")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("param_value2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("param_value3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("param_value4")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("param_value5")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("rec_branch_id")
                        .HasColumnType("integer");

                    b.Property<int>("rec_company_id")
                        .HasColumnType("integer");

                    b.Property<string>("rec_created_by")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("rec_created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_edited_by")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("rec_edited_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("rec_locked")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char")
                        .HasDefaultValue("N");

                    b.Property<int>("rec_version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("param_id")
                        .HasName("pk_mast_param_param_id");

                    b.HasIndex("rec_branch_id");

                    b.HasIndex("rec_company_id", "param_type", "param_code")
                        .IsUnique()
                        .HasDatabaseName("uq_mast_param_param_code");

                    b.HasIndex("rec_company_id", "param_type", "param_name")
                        .IsUnique()
                        .HasDatabaseName("uq_mast_param_param_name");

                    b.ToTable("mast_param", (string)null);

                    b.HasData(
                        new
                        {
                            param_id = 1,
                            param_code = "IN",
                            param_name = "INDIA",
                            param_order = 1,
                            param_type = "COUNTRY",
                            param_value1 = "",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4739),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 2,
                            param_code = "US",
                            param_name = "USA",
                            param_order = 2,
                            param_type = "COUNTRY",
                            param_value1 = "",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4761),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 3,
                            param_code = "KL",
                            param_name = "KERALA",
                            param_order = 1,
                            param_type = "STATE",
                            param_value1 = "",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",

                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4801),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 4,
                            param_code = "CMA",
                            param_name = "CMA CHM",
                            param_order = 1,
                            param_type = "SEA CARRIER",
                            param_value1 = "CMDU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4808),
                           rec_version = 0
                        },
                        new
                        {
                            param_id = 5,
                            param_code = "HLCU",
                            param_name = "HAPAQ LLOYD",
                            param_order = 2,
                            param_type = "SEA CARRIER",
                            param_value1 = "HLCU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4810),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 6,
                            param_code = "MAEU",
                            param_name = "MAERSK",
                            param_order = 3,
                            param_type = "SEA CARRIER",
                            param_value1 = "MAEU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4813),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 7,
                            param_code = "MSCU",
                            param_name = "MSC",
                            param_order = 4,
                            param_type = "SEA CARRIER",
                            param_value1 = "MSCU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4815),
                           rec_version = 0
                        },
                        new
                        {
                            param_id = 8,
                            param_code = "EGLV",
                            param_name = "EVERGREEN",
                            param_order = 5,
                            param_type = "SEA CARRIER",
                            param_value1 = "EGLV",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4817),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 9,
                            param_code = "HDMU",
                            param_name = "HMM",
                            param_order = 6,
                            param_type = "SEA CARRIER",
                            param_value1 = "HDMU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4820),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 10,
                            param_code = "YMLU",
                            param_name = "YANG MING",
                            param_order = 7,
                            param_type = "SEA CARRIER",
                            param_value1 = "YMLU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4822),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 11,
                            param_code = "ONEY",
                            param_name = "OCEAN NETWORK EXPRESS",
                            param_order = 8,
                            param_type = "SEA CARRIER",
                            param_value1 = "ONEY",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4825),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 12,
                            param_code = "OOCL",
                            param_name = "OOCL",
                            param_order = 9,
                            param_type = "SEA CARRIER",
                            param_value1 = "OOLU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4828),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 13,
                            param_code = "COSCO",
                            param_name = "COSCO",
                            param_order = 10,
                            param_type = "SEA CARRIER",
                            param_value1 = "COSU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4830),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 14,
                            param_code = "ANL",
                            param_name = "ANL",
                            param_order = 11,
                            param_type = "SEA CARRIER",
                            param_value1 = "ANNU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4832),
                           rec_version = 0
                        },
                        new
                        {
                            param_id = 15,
                            param_code = "APL",
                            param_name = "APL",
                            param_order = 12,
                            param_type = "SEA CARRIER",
                            param_value1 = "ANNU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4835),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 16,
                            param_code = "EMIRATES",
                            param_name = "EMIRATES",
                            param_order = 13,
                            param_type = "SEA CARRIER",
                            param_value1 = "ESPU",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4837),
                            rec_version = 0
                        },
                        new
                        {
                            param_id = 17,
                            param_code = "HANJIN",
                            param_name = "HANJIN",
                            param_order = 14,
                            param_type = "SEA CARRIER",
                            param_value1 = "HJSC",
                            param_value2 = "",
                            param_value3 = "",
                            param_value4 = "",
                            param_value5 = "",
                            rec_company_id = 1,
                            rec_created_by = "ADMIN",
                            rec_created_date = new DateTime(2025, 1, 13, 6, 8, 55, 663, DateTimeKind.Utc).AddTicks(4840),
                            rec_version = 0
                        },

            modelBuilder.Entity("Database.Models.UserAdmin.mast_userm", b =>
                {
                    b.Navigation("userbranches");
                });
#pragma warning restore 612, 618
        }
    }
}
