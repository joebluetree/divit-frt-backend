CREATE TABLE IF NOT EXISTS mast_fileUpload (
    files_id INT4 GENERATED BY DEFAULT AS IDENTITY,
    files_parent_id INT4 NULL,
    files_parent_type VARCHAR(100) NULL,
    files_slno INT4 NULL,
    files_type VARCHAR(100) NULL,
    files_desc VARCHAR(100) NULL,
    files_ref_no VARCHAR(100) NULL,
    files_path VARCHAR(100) NULL,
    files_sub_id INT4 NULL,
    files_size VARCHAR(50) NULL,
    files_processed VARCHAR(10) NULL,

    rec_version INT4 DEFAULT 1 NOT NULL,
    rec_locked VARCHAR(50) NULL,
    rec_created_by VARCHAR(50) NULL,
    rec_created_date TIMESTAMPTZ NOT NULL,
    rec_edited_by VARCHAR(50) NULL,
    rec_edited_date TIMESTAMPTZ NULL,
    rec_company_id INT4 NOT NULL,
    rec_branch_id INT4 NULL,

    CONSTRAINT pk_mast_fileUpload_files_id PRIMARY KEY (files_id)
);

DO $$
BEGIN

    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'IX_cargo_slip_rec_company_id') THEN
        CREATE INDEX "IX_cargo_slip_rec_company_id" ON cargo_slip USING btree (rec_company_id);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'IX_cargo_slip_rec_branch_id') THEN
        CREATE INDEX "IX_cargo_slip_rec_branch_id" ON cargo_slip USING btree (rec_branch_id);
    END IF;

END $$;

SELECT setval(pg_get_serial_sequence('mast_fileUpload', 'files_id'),
              COALESCE(MAX(files_id), 1),
              true)
FROM mast_fileUpload;
