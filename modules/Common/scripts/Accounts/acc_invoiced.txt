CREATE TABLE IF NOT EXISTS acc_invoiced (
	invd_id int4 GENERATED BY DEFAULT AS IDENTITY,
	invd_parent_id int4 NOT NULL,
	invd_acc_id int4 NULL,
	invd_acc_name varchar(30) NULL,
	invd_remarks varchar(120) NULL,
	invd_qty numeric(15, 3) NULL,
	invd_frate numeric(15, 3) NULL,	
	invd_ftotal numeric(15, 3) NULL,	
	invd_cur_id int4 NULL,
	invd_exrate numeric(15, 7) NULL,
	invd_rate numeric(15, 3) NULL,	
	invd_total numeric(15, 3) NULL,
	rec_deleted varchar(1) NULL,
	invd_order int4 NULL,
	
	rec_version int4 DEFAULT 1 NOT NULL,
	rec_locked bpchar(1) DEFAULT 'N'::bpchar NOT NULL,
	rec_created_by varchar(20) NOT NULL,
	rec_created_date timestamptz NOT NULL,
	rec_edited_by varchar(20) NULL,
	rec_edited_date timestamptz NULL,
	rec_company_id int4 NOT NULL,
	rec_branch_id int4 NOT NULL,
	CONSTRAINT pk_acc_invoiced_invd_id PRIMARY KEY (invd_id)
);

DO $$  
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE  indexname = 'IX_acc_invoiced_invd_parent_id') THEN
		CREATE INDEX "IX_acc_invoiced_invd_parent_id" ON acc_invoiced USING btree (invd_parent_id);
    END IF;
	
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE  indexname = 'IX_acc_invoiced_invd_acc_id') THEN
		CREATE INDEX "IX_acc_invoiced_invd_acc_id" ON acc_invoiced USING btree (invd_acc_id);
    END IF;

	IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE  indexname = 'IX_acc_invoiced_invd_cur_id') THEN
		CREATE INDEX "IX_acc_invoiced_invd_cur_id" ON acc_invoiced USING btree (invd_cur_id);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'IX_acc_invoiced_rec_branch_id') THEN
        CREATE INDEX "IX_acc_invoiced_rec_branch_id" ON acc_invoiced USING btree (rec_branch_id);
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = 'IX_acc_invoiced_rec_company_id') THEN
        CREATE INDEX "IX_acc_invoiced_rec_company_id" ON acc_invoiced USING btree (rec_company_id);
    END IF;
END $$;

SELECT setval(pg_get_serial_sequence('acc_invoiced', 'invd_id'), 
              COALESCE(MAX(invd_id), 1), 
              true) 
FROM acc_invoiced;